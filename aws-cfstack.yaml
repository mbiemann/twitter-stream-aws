Transform: AWS::Serverless-2016-10-31

Parameters:

  Email:
    Type: String

Resources:

  Topic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Ref AWS::StackName
      Subscription:
        - Protocol: email
          Endpoint: !Ref Email

  Bucket:
    Type: AWS::S3::Bucket

  Function:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref AWS::StackName
      Runtime: python3.8
      CodeUri: ./stream_function
      Handler: lambda_function.lambda_handler
      MemorySize: 128
      Timeout: 60
      Environment:
        Variables:
          BUCKET: !Ref Bucket
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: "*"
              Resource: "*"

  StateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Ref AWS::StackName
      Definition:
        StartAt: Stream
        States:
          Stream:
            Type: Task
            Resource: !Sub ${Function.Arn}
            ResultPath: $.stream
            Catch:
              - ErrorEquals: [States.ALL]
                Next: Email
            Next: Stream
          Email:
            Type: Task
            Resource: arn:aws:states:::sns:publish
            Parameters:
              TopicArn: !Ref Topic
              Subject: !Ref AWS::StackName
              Message.$: $.Cause
            End: True
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: "*"
              Resource: "*"
